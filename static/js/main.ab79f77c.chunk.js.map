{"version":3,"sources":["bg.jpg","store.js","components/ToDo.js","routes/Home.js","GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","toDos","saveToDos","localStorage","setItem","JSON","stringify","loadToDos","loadedToDos","getItem","parsedToDos","parse","store","createStore","state","action","type","text","id","Date","now","filter","toDo","actionCreators","Btn","styled","button","List","div","connect","dispatch","ownProps","onBtnClick","onClick","Img","bgImage","Title","Form","form","addToDo","useState","setText","onSubmit","e","preventDefault","value","onChange","target","map","key","createGlobalStyle","reset","App","GlobalStyles","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,gC,6KCmBvCC,EAAQ,GACNC,EAAY,WAChBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,KAExCM,EAAY,WAChB,IAAMC,EAAcL,aAAaM,QAAQ,QACzC,GAAoB,OAAhBD,EAAsB,CACxB,IAAME,EAAcL,KAAKM,MAAMH,GAC/BP,EAAQS,IAqBNE,EAAQC,aAjBE,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAGtC,OAFAR,IACAO,EAAQb,EACAc,EAAOC,MACb,IAjCQ,MAoCN,OAFAf,EAAK,CAAI,CAAEgB,KAAMF,EAAOE,KAAMC,GAAIC,KAAKC,QAAlC,mBAA8CN,IACnDZ,IACOD,EACT,IApCW,SAuCT,OAFAA,EAAQa,EAAMO,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOH,EAAOG,MAChDhB,IACOD,EACT,QACE,OAAOa,MAMAS,EA7CG,SAAAN,GACd,MAAO,CACLD,KALQ,MAMRC,SA0CSM,EAtCM,SAAAL,GACjB,MAAO,CACLF,KAXW,SAYXE,OAwCWN,I,4XClDf,IAAMY,EAAMC,UAAOC,OAAV,KAMHC,EAAOF,UAAOG,IAAV,KAyBKC,kBAAQ,MANvB,SAA4BC,EAAUC,GACpC,MAAO,CACLC,WAAY,kBAAMF,EAASP,EAA0BQ,EAASb,SAInDW,EAff,YAAqC,IAArBZ,EAAoB,EAApBA,KAAMe,EAAc,EAAdA,WACpB,OACE,kBAACL,EAAD,KACGV,EACD,kBAACO,EAAD,CAAKS,QAASD,GAAd,S,qwBClBN,IAAME,EAAMT,UAAOG,IAAV,IAMiBO,KAMpBC,EAAQX,UAAOG,IAAV,KAOLS,EAAOZ,UAAOa,KAAV,KAOJX,EAAOF,UAAOG,IAAV,KAiDKC,mBAXf,SAAyBf,GACvB,MAAO,CAAEb,MAAOa,MAIlB,SAA4BgB,GAC1B,MAAO,CACLS,QAAS,SAAAtB,GAAI,OAAIa,EAASP,EAAuBN,QAItCY,EA1Cf,YAAmC,IAAnB5B,EAAkB,EAAlBA,MAAOsC,EAAW,EAAXA,QAAW,EACRC,mBAAS,IADD,mBACzBvB,EADyB,KACnBwB,EADmB,KAUhC,OACE,kBAACP,EAAD,KACE,kBAACE,EAAD,aACA,kBAACC,EAAD,CAAMK,SARV,SAAkBC,GAChBA,EAAEC,iBACFL,EAAQtB,GACRwB,EAAQ,MAMJ,2BAAOzB,KAAK,OAAO6B,MAAO5B,EAAM6B,SAZtC,SAAkBH,GAChBF,EAAQE,EAAEI,OAAOF,UAYb,sCAEF,kBAAC,EAAD,KACE,4BACG5C,EAAM+C,KAAI,SAAA1B,GAAI,OACb,kBAAC,EAAD,iBAAUA,EAAV,CAAgB2B,IAAK3B,EAAKJ,e,ggBCzDvBgC,kCAAf,IACMC,KCYSC,MAXf,WACE,OACE,oCACE,kBAACC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,OCJzCC,IAASC,OACP,kBAAC,IAAD,CAAU/C,MAAOA,GACf,kBAAC,EAAD,OAEFgD,SAASC,eAAe,W","file":"static/js/main.ab79f77c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.33ad4440.jpg\";","import { createStore } from \"redux\";\r\n\r\nconst ADD = \"ADD\";\r\nconst DELETE = \"DELETE\";\r\n\r\nconst addToDo = text => {\r\n  return {\r\n    type: ADD,\r\n    text\r\n  };\r\n};\r\n\r\nconst deleteToDo = id => {\r\n  return {\r\n    type: DELETE,\r\n    id\r\n  };\r\n};\r\n\r\nlet toDos = [];\r\nconst saveToDos = () => {\r\n  localStorage.setItem(\"ToDo\", JSON.stringify(toDos));\r\n};\r\nconst loadToDos = () => {\r\n  const loadedToDos = localStorage.getItem(\"ToDo\");\r\n  if (loadedToDos !== null) {\r\n    const parsedToDos = JSON.parse(loadedToDos);\r\n    toDos = parsedToDos;\r\n  }\r\n};\r\n\r\nconst reducer = (state = [], action) => {\r\n  loadToDos();\r\n  state = toDos;\r\n  switch (action.type) {\r\n    case ADD:\r\n      toDos = [{ text: action.text, id: Date.now() }, ...state];\r\n      saveToDos();\r\n      return toDos;\r\n    case DELETE:\r\n      toDos = state.filter(toDo => toDo.id !== action.id);\r\n      saveToDos();\r\n      return toDos;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport const actionCreators = {\r\n  addToDo,\r\n  deleteToDo\r\n};\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from \"../store\";\r\n\r\nconst Btn = styled.button`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst List = styled.div`\r\n  margin: 10px;\r\n  text-align: center;\r\n  font-family: 'Song Myung', serif;\r\n  font-size: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  opacity: 0.8;\r\n`;\r\n\r\nfunction ToDo({ text, onBtnClick }) {\r\n  return (\r\n    <List>\r\n      {text}\r\n      <Btn onClick={onBtnClick}>X</Btn>\r\n    </List>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    onBtnClick: () => dispatch(actionCreators.deleteToDo(ownProps.id))\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ToDo);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from \"../store\";\r\nimport ToDo from \"../components/ToDo\";\r\nimport bgImage from \"../bg.jpg\";\r\n\r\nconst Img = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${bgImage});\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 100px;\r\n  font-family: \"Lobster\", cursive;\r\n  font-size: 70px;\r\n  color: white;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst List = styled.div`\r\n  margin-top: 30px;\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nfunction Home({ toDos, addToDo }) {\r\n  const [text, setText] = useState(\"\");\r\n  function onChange(e) {\r\n    setText(e.target.value);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    addToDo(text);\r\n    setText(\"\");\r\n  }\r\n  return (\r\n    <Img>\r\n      <Title>ToDo</Title>\r\n      <Form onSubmit={onSubmit}>\r\n        <input type=\"text\" value={text} onChange={onChange} />\r\n        <button>+</button>\r\n      </Form>\r\n      <List>\r\n        <ul>\r\n          {toDos.map(toDo => (\r\n            <ToDo {...toDo} key={toDo.id} />\r\n          ))}\r\n        </ul>\r\n      </List>\r\n    </Img>\r\n  );\r\n}\r\n\r\n//take state from store to home\r\n//map state from redux store to props from component\r\n//use to get somthing from store and put it into props\r\nfunction mapStateToProps(state) {\r\n  return { toDos: state };\r\n}\r\n\r\n//create function and send it to props\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addToDo: text => dispatch(actionCreators.addToDo(text))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default createGlobalStyle`\r\n    ${reset};\r\n    input{\r\n        border: 0px;\r\n        padding: 5px 10px;\r\n        margin-top: 3px;\r\n        border-radius: 10px;\r\n        :focus{\r\n            outline: none;\r\n        }\r\n    }\r\n    button{\r\n        cursor: pointer;\r\n        border: 0px;\r\n        margin-left: 10px;\r\n        background-color: white;\r\n        width: 25px;\r\n        height: 25px;\r\n        border-radius: 12.5px;\r\n        font-size: 20px;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport GlobalStyles from \"../GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Router>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}